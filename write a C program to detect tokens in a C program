#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <string.h>
#define MAX_LEN 100
int isKeyword(const char *word) {
 const char *keywords[] = {"int", "float", "double", "char", "if", "else", "while", "for", "return",
"break", "continue"};
 for (int i = 0; i < 11; i++) {
 if (strcmp(word, keywords[i]) == 0) {
 return 1;
 }
 }
 return 0;
}
int isIdentifier(const char *word) {
 if (!isalpha(word[0]) && word[0] != '_') {
 return 0;
 }
 for (int i = 1; i < strlen(word); i++) {
 if (!isalnum(word[i]) && word[i] != '_') {
 return 0;
 }
 }
 return 1;
}
int isNumber(const char *word) {
 for (int i = 0; i < strlen(word); i++) {
 if (!isdigit(word[i])) {
 return 0;
 }
 }
 return 1;
}
int main() {
 char code[MAX_LEN];
 char token[MAX_LEN];
 int i = 0, j = 0;
 printf("Enter a C program (end with # to stop):\n");
 fgets(code, sizeof(code), stdin);
 while (i < strlen(code)) {
 if (isspace(code[i])) {
 i++;
 continue;
 }

 if (isalpha(code[i]) || code[i] == '_') {
 j = 0;
 while (isalnum(code[i]) || code[i] == '_') {
 token[j++] = code[i++];
 }
 token[j] = '\0';
 if (isKeyword(token)) {
 printf("Keyword: %s\n", token);
 } else if (isIdentifier(token)) {
 printf("Identifier: %s\n", token);
 }
 }
 else if (isdigit(code[i])) {
 j = 0;
 while (isdigit(code[i])) {
 token[j++] = code[i++];
 }
 token[j] = '\0';
 printf("Number: %s\n", token);
 }
 else if (code[i] == '+' || code[i] == '-' || code[i] == '*' || code[i] == '/' ||
 code[i] == '=' || code[i] == '<' || code[i] == '>' || code[i] == '%' ||
 code[i] == '!' || code[i] == '&' || code[i] == '|') {
 token[0] = code[i++];
 token[1] = '\0';
 printf("Operator: %s\n", token);
 }
 else if (code[i] == '(' || code[i] == ')' || code[i] == '{' || code[i] == '}' ||
 code[i] == '[' || code[i] == ']' || code[i] == ',' || code[i] == ';' ||
 code[i] == '.') {
 token[0] = code[i++];
 token[1] = '\0';
 printf("Punctuation: %s\n", token);
 }
 else {
 i++;
 }
 }
 return 0;
}
