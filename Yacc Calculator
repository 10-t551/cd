%{
    #include "calc.tab.h"
    #include <stdlib.h>
%}

%%

[0-9]+    { yylval = atoi(yytext); return NUMBER; }
[+\-*/()] { return yytext[0]; }
[ \t\n]+  ;   // Ignore whitespace
.         { return -1; }

%%
int yywrap() {
     return 1;
}
//yy
%{
    #include <stdio.h>
    #include <stdlib.h>
    extern int yylex();
    void yyerror(const char *s);
%}

%token NUMBER
%left '+' '-'
%left '*' '/'

%%

start:
    expr '\n' { printf("Result = %d\n", $1); }
    ;

expr:
      expr '+' expr { $$ = $1 + $3; }
    | expr '-' expr { $$ = $1 - $3; }
    | expr '*' expr { $$ = $1 * $3; }
    | expr '/' expr {
        if ($3 == 0) {
            yyerror("Division by zero");
            exit(1);
        }
        $$ = $1 / $3;
      }
    | '(' expr ')'  { $$ = $2; }
    | NUMBER        { $$ = $1; }
    ;

%%

void yyerror(const char *s) {
    printf("Error: %s\n", s);
}

int main() {
    printf("Enter an arithmetic expression: ");
    yyparse();
    return 0;
}
